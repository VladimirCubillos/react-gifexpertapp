{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","console","log","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6MAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,IACdO,QAAQC,IAAI,mBAMZ,2BACIC,KAAK,OACLC,MAAQX,EACRY,SAnBc,SAACT,GACvBF,EAAeE,EAAEU,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCYLO,EAVK,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE3B,OACI,yBAAKc,UAAU,wCACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,OCqBGO,EAxBE,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDR,SAAEA,GAAgB,IAAD,EAEfhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAoBzC,OAbAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDjB0BK,CAAc1B,GAAlCa,EAFmB,EAExBN,KAAaa,EAFW,EAEXA,QAErB,OACI,oCACI,wBAAIJ,UAAU,gDAAd,IAAgEhB,EAAhE,KAEEoB,GAAW,uBAAGJ,UAAU,oCAAb,qBAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAEC,GAAF,OACR,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEUlBkB,EAxBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,cAFrB,mBAElB6C,EAFkB,KAEN9C,EAFM,KAIzB,OACI,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ8C,EAAWpB,KAAK,SAAAT,GAAS,OACvB,kBAAC,EAAD,CACE2B,IAAM3B,EACNA,UAAYA,UCdhC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0f8f38f4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {  // e: evento\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategorias( category => [inputValue, ...category] );\r\n            setInputValue('');\r\n            console.log('Submit Hecho');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async ( categoria ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=VkjdJCi3HvRoIa4F3ugFoK2WmyQEjGYk`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__tada\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GiftGrid = ({ categoria }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__lightSpeedInRight\"> { categoria } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando gifs ...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( ( img ) => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ) )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftGrid\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( categoria )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            } )\r\n    }, [ categoria ] )\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GiftGrid from './components/GiftGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categorias, setCategorias] = useState(['One Punch'])\r\n\r\n  return (\r\n      <>\r\n        <h2>GifExpertApp</h2>  \r\n        <AddCategory setCategorias={ setCategorias }/>\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categorias.map( categoria => (\r\n                  <GiftGrid \r\n                    key={ categoria }\r\n                    categoria={ categoria }\r\n                  />\r\n                ))\r\n            }\r\n        </ol>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}